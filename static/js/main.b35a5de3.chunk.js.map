{"version":3,"sources":["components/Footer/Footer.module.scss","components/Header/Header.module.scss","actions/actions.js","services/news-api.js","components/StoryPreviewPlaceholder.jsx","utils/normalization.js","components/StoryPreview.jsx","components/NewsList.jsx","components/Comment.jsx","components/Story.jsx","components/Header/Header.jsx","components/Footer/Footer.jsx","components/App.jsx","reducers/reducers.js","store.js","index.js"],"names":["module","exports","addLatestStories","createAction","addStory","changeLoadingStatus","setBranchStatus","changeBranchStatus","baseUrl","getNewNews","axios","get","then","data","getItem","storyId","catch","thrown","console","log","StoryPreviewPlaceholder","className","style","maxWidth","timestampToTime","timestamp","msPerMinute","msPerHour","msPerDay","msPerMonth","msPerYear","elapsed","Date","Math","round","StoryPreview","id","useState","story","setStory","requestStatus","setRequestStatus","useEffect","storyRequest","response","to","title","score","by","time","descendants","actionCreators","actions","connect","state","stories","ui","seconds","setSeconds","timer","setTimeout","handleUpdateStoriesIDs","clearTimeout","latestStoriesIDs","slice","onClick","map","storyID","placeholder","offset","Comment","commentID","kids","setKids","comment","setComment","getRequest","commentBranch","btnState","fetchingStatus","deleted","text","dangerouslySetInnerHTML","__html","status","sessionStorage","setItem","JSON","stringify","disabled","length","kidID","handleKids","Story","match","params","comments","setComments","handleUpdateComments","target","rel","href","url","Header","styles","root","Footer","h3","link","getStories","parse","basename","path","exact","component","NewsList","handleActions","payload","loadingStatus","combineReducers","store","createStore","reducers","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b35a5de3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"h3\":\"Footer_h3__2C_8G\",\"link\":\"Footer_link__9_ojg\",\"MoveUpInitial\":\"Footer_MoveUpInitial__2K9ot\",\"MoveUpEnd\":\"Footer_MoveUpEnd__2aVnP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Header_root__jsaeH\",\"MoveUpInitial\":\"Header_MoveUpInitial__120BZ\",\"MoveUpEnd\":\"Header_MoveUpEnd__zsMY2\"};","import { createAction } from \"redux-actions\";\n\nexport const addLatestStories = createAction(\"STORIES_LATEST_ADD\");\n\nexport const addStory = createAction(\"STORY_ADD\");\n\nexport const changeLoadingStatus = createAction(\"LOADING_STATUS_CHANGE\");\n\nexport const setBranchStatus = createAction(\"BRANCH_STATUS_SET\");\n\nexport const changeBranchStatus = createAction(\"BRANCH_STATUS_CHANGE\");\n","import axios from \"axios\";\n\nconst baseUrl = \"https://hacker-news.firebaseio.com/v0/\";\n\nexport const getNewNews = async () =>\n    await axios.get(`${baseUrl}newstories.json?print=pretty`).then(({ data }) => data);\n\nexport const getItem = (storyId) =>\n    axios\n        .get(`${baseUrl}item/${storyId}.json?print=pretty`)\n        .then(({ data }) => data)\n        .catch(function (thrown) {\n            console.log(thrown);\n        });\n","import React from \"react\";\n\nconst StoryPreviewPlaceholder = () => {\n  return (\n    <article className=\"story-preview\">\n      <div className=\"skeleton-item\">\n        <div>\n          <div className=\"skeleton-block\" style={{ maxWidth: \"500px\" }}>\n            {\" \"}\n          </div>\n        </div>\n        <div>\n          <div className=\"skeleton-block\" style={{ maxWidth: \"50px\" }}>\n            {\" \"}\n          </div>\n          <div className=\"skeleton-block\" style={{ maxWidth: \"100px\" }}>\n            {\" \"}\n          </div>\n          <div className=\"skeleton-block\" style={{ maxWidth: \"100px\" }}>\n            {\" \"}\n          </div>\n          <div className=\"skeleton-block\" style={{ maxWidth: \"100px\" }}>\n            {\" \"}\n          </div>\n        </div>\n      </div>\n    </article>\n  );\n};\n\nexport default StoryPreviewPlaceholder;\n","export const timestampToTime = (timestamp) => {\n  const current = new Date();\n  const previous = new Date(timestamp * 1000);\n\n  const msPerMinute = 60 * 1000;\n  const msPerHour = msPerMinute * 60;\n  const msPerDay = msPerHour * 24;\n  const msPerMonth = msPerDay * 30;\n  const msPerYear = msPerDay * 365;\n\n  const elapsed = current - previous;\n\n  if (elapsed < msPerMinute) {\n    return Math.round(elapsed / 1000) + \" seconds ago\";\n  } else if (elapsed < msPerHour) {\n    return Math.round(elapsed / msPerMinute) + \" minutes ago\";\n  } else if (elapsed < msPerDay) {\n    return Math.round(elapsed / msPerHour) + \" hours ago\";\n  } else if (elapsed < msPerMonth) {\n    return Math.round(elapsed / msPerDay) + \" days ago\";\n  } else if (elapsed < msPerYear) {\n    return Math.round(elapsed / msPerMonth) + \" months ago\";\n  } else {\n    return Math.round(elapsed / msPerYear) + \" years ago\";\n  }\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getItem } from \"../services/news-api\";\nimport StoryPreviewPlaceholder from \"./StoryPreviewPlaceholder\";\nimport { timestampToTime } from \"../utils/normalization\";\n\nconst StoryPreview = ({ id }) => {\n    const [story, setStory] = useState({});\n    const [requestStatus, setRequestStatus] = useState(\"fetching\");\n\n    useEffect(() => {\n        setRequestStatus(\"fetching\");\n        const storyRequest = async () => {\n            const response = await getItem(id);\n            setStory(response);\n        };\n        storyRequest().then(() => setRequestStatus(\"finished\"));\n    }, [id]);\n\n    return !story || requestStatus === \"fetching\" ? (\n        <StoryPreviewPlaceholder />\n    ) : (\n        <article className=\"story-preview\">\n            <Link className=\"link\" to={`/${story.id}`}>\n                {story.title}\n            </Link>\n            <section className=\"story-info\">\n                <div>\n                    <span>Score:</span> {story.score}\n                </div>\n                <div>\n                    <span>By:</span> {story.by}\n                </div>\n                <div>\n                    <span>Posted:</span> {timestampToTime(story.time)}\n                </div>\n                <div>\n                    <span>Comments:</span> {story.descendants}\n                </div>\n            </section>\n        </article>\n    );\n};\n\nexport default StoryPreview;\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions/actions\";\nimport { getNewNews } from \"../services/news-api\";\nimport StoryPreview from \"./StoryPreview.jsx\";\nimport LazyLoad from \"react-lazyload\";\nimport StoryPreviewPlaceholder from \"./StoryPreviewPlaceholder\";\n\nconst mapStateToProps = (state) => {\n    return { stories: state.stories, ui: state.ui };\n};\n\nconst actionCreators = {\n    addLatestStories: actions.addLatestStories,\n};\n\nconst NewsList = ({ stories, addLatestStories }) => {\n    const [seconds, setSeconds] = useState(59);\n\n    // Таймер\n    useEffect(() => {\n        let timer;\n        if (seconds > 0) {\n            timer = setTimeout(() => setSeconds(seconds - 1), 1000);\n        } else {\n            handleUpdateStoriesIDs().then(() => setSeconds(59));\n        }\n\n        return () => {\n            clearTimeout(timer);\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [setSeconds, seconds]);\n\n    // обновит новости\n    const handleUpdateStoriesIDs = async () => {\n        const latestStoriesIDs = await getNewNews();\n        addLatestStories({ latestStoriesIDs: latestStoriesIDs.slice(0, 100) });\n        setSeconds(59);\n    };\n\n    const renderNews = () =>\n        stories.latestStoriesIDs.map((storyID) => (\n            <LazyLoad\n                key={storyID}\n                placeholder={<StoryPreviewPlaceholder />}\n                offset={300}\n            >\n                <StoryPreview key={storyID} id={storyID} />\n            </LazyLoad>\n        ));\n\n    return (\n        <main>\n            <h2>LATEST NEWS</h2>\n            <div className=\"refresh-btn-wrapper\">\n                <button\n                    className=\"button button-animated\"\n                    onClick={handleUpdateStoriesIDs}\n                >\n                    <span>\n                        <span>Refresh {seconds}</span>\n                    </span>\n                </button>\n            </div>\n            <section className=\"stories-list\">{renderNews()}</section>\n        </main>\n    );\n};\n\nexport default connect(mapStateToProps, actionCreators)(NewsList);\n","import React, { useEffect, useState } from \"react\";\nimport { getItem } from \"../services/news-api\";\nimport * as actions from \"../actions/actions\";\nimport { connect } from \"react-redux\";\nimport LazyLoad from \"react-lazyload\";\nimport { timestampToTime } from \"../utils/normalization\";\n\nconst mapStateToProps = (state) => {\n    return { ui: state.ui };\n};\n\nconst actionCreators = { changeBranchStatus: actions.changeBranchStatus };\n\nconst Comment = ({ commentID, changeBranchStatus, ui }) => {\n    const [kids, setKids] = useState([]);\n    const [comment, setComment] = useState({});\n    const [requestStatus, setRequestStatus] = useState(\"finished\");\n\n    useEffect(() => {\n        const getRequest = async () => {\n            setRequestStatus(\"fetching\");\n            const data = await getItem(commentID);\n            setComment(data);\n            if (\n                !data ||\n                !data.kids ||\n                !ui.commentBranch[data.id] ||\n                ui.commentBranch[data.id] === \"closed\"\n            ) {\n                return;\n            }\n            setKids(data.kids);\n        };\n\n        getRequest().then(() => setRequestStatus(\"finished\"));\n    }, [commentID, ui]);\n\n    const createMarkup = () => {\n        return { __html: comment.text };\n    };\n\n    const handleKids = () => {\n        if (comment.kids === 0 || kids.length === 0 || !ui) {\n            return;\n        }\n        if (ui.commentBranch[comment.id] && ui.commentBranch[comment.id] === \"opened\") {\n            return kids.map((kidID) => (\n                <LazyLoad key={kidID}>\n                    <Comment\n                        key={kidID}\n                        commentID={kidID}\n                        changeBranchStatus={changeBranchStatus}\n                        ui={ui}\n                    />\n                </LazyLoad>\n            ));\n        }\n    };\n\n    const handleChangeBranchStatus = () => {\n        const status =\n            !ui.commentBranch[comment.id] || ui.commentBranch[comment.id] === \"closed\"\n                ? \"opened\"\n                : \"closed\";\n        sessionStorage.setItem(\n            \"branchesStatus\",\n            JSON.stringify({ ...ui.commentBranch, [comment.id]: status })\n        );\n        changeBranchStatus({ id: comment.id, status });\n    };\n\n    const btnState =\n        !ui.commentBranch[comment.id] || ui.commentBranch[comment.id] === \"closed\";\n\n    const fetchingStatus = requestStatus === \"fetching\";\n\n    const renderHeader = () =>\n        !comment.by ? (\n            <div\n                className=\"skeleton-block skeleton-block-header\"\n                style={{ maxWidth: \"300px\" }}\n            >\n                {\" \"}\n            </div>\n        ) : (\n            <>\n                <span>By: </span>\n                {comment.by}\n                <span> Posted: </span>\n                {timestampToTime(comment.time)}\n            </>\n        );\n\n    const renderText = () => {\n        if (comment.deleted) {\n            return <h4>[commentary deleted]</h4>;\n        }\n        if (comment.text) {\n            return (\n                <div className=\"comment-text\" dangerouslySetInnerHTML={createMarkup()} />\n            );\n        }\n        return (\n            <div className=\"comment-text\">\n                <div className=\"skeleton-block\"> </div>\n                <div className=\"skeleton-block\"> </div>\n                <div className=\"skeleton-block\"> </div>\n            </div>\n        );\n    };\n\n    return (\n        comment && (\n            <article className=\"comment\">\n                <div className=\"comment-info\">{renderHeader()}</div>\n                {renderText()}\n                {comment.kids ? (\n                    <button\n                        className=\"button button-animated button-comment\"\n                        onClick={handleChangeBranchStatus}\n                        disabled={fetchingStatus}\n                    >\n                        <span>\n                            <span>{btnState ? \"Show branch\" : \"Hide branch\"}</span>\n                        </span>\n                    </button>\n                ) : (\n                    <button className=\"button btn-disabled\" disabled>\n                        expand branch\n                    </button>\n                )}\n                {handleKids()}\n            </article>\n        )\n    );\n};\n\nexport default connect(mapStateToProps, actionCreators)(Comment);\n","import React, { useEffect, useState } from \"react\";\nimport { getItem } from \"../services/news-api\";\nimport Comment from \"../components/Comment.jsx\";\nimport StoryPreviewPlaceholder from \"./StoryPreviewPlaceholder\";\nimport LazyLoad from \"react-lazyload\";\nimport { timestampToTime } from \"../utils/normalization\";\n\nconst Story = ({\n    match: {\n        params: { id },\n    },\n}) => {\n    const [story, setStory] = useState({});\n    const [comments, setComments] = useState([]);\n    const [seconds, setSeconds] = useState(59);\n\n    // Таймер\n    useEffect(() => {\n        let timer;\n        if (seconds > 0) {\n            timer = setTimeout(() => setSeconds(seconds - 1), 1000);\n        } else {\n            handleUpdateComments().then(() => setSeconds(59));\n        }\n        return () => {\n            clearTimeout(timer);\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [setSeconds, seconds]);\n\n    useEffect(() => {\n        const storyRequest = async () => {\n            const response = await getItem(id);\n            if (response.kids) {\n                setComments(response.kids);\n            }\n            setStory(response);\n        };\n        storyRequest().then(() => {});\n    }, [id, setComments]);\n\n    const renderComments = () =>\n        comments.map((commentID) => (\n            <LazyLoad key={commentID} placeholder={<StoryPreviewPlaceholder />}>\n                <Comment key={commentID} commentID={commentID} />\n            </LazyLoad>\n        ));\n\n    // обновит комментарии\n    const handleUpdateComments = async () => {\n        const response = await getItem(id);\n        if (response.kids) {\n            setComments(response.kids);\n        }\n        setStory(response);\n        setSeconds(59);\n    };\n\n    const renderTitle = () => {\n        if (story.title) {\n            return (\n                <h2>\n                    {story.title} (\n                    <a\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"nav-link link-source\"\n                        href={story.url}\n                    >\n                        SOURCE\n                    </a>\n                    )\n                </h2>\n            );\n        }\n        return (\n            <div className=\"skeleton-item justify-center\">\n                <div\n                    className=\"skeleton-block skeleton-block-title\"\n                    style={{ maxWidth: \"500px\" }}\n                >\n                    {\" \"}\n                </div>\n            </div>\n        );\n    };\n\n    const renderInfo = () => {\n        if (story.by) {\n            return (\n                <section className=\"story-info justify-center\">\n                    <div>\n                        <span>Score:</span> {story.score}\n                    </div>\n                    <div>\n                        <span>By:</span> {story.by}\n                    </div>\n                    <div>\n                        <span>Posted:</span> {timestampToTime(story.time)}\n                    </div>\n                </section>\n            );\n        }\n        return (\n            <div className=\"skeleton-item justify-center\">\n                <div\n                    className=\"skeleton-block skeleton-block-info\"\n                    style={{ maxWidth: \"50px\" }}\n                >\n                    {\" \"}\n                </div>\n                <div\n                    className=\"skeleton-block skeleton-block-info\"\n                    style={{ maxWidth: \"100px\" }}\n                >\n                    {\" \"}\n                </div>\n                <div\n                    className=\"skeleton-block skeleton-block-info\"\n                    style={{ maxWidth: \"150px\" }}\n                >\n                    {\" \"}\n                </div>\n            </div>\n        );\n    };\n\n    return (\n        story && (\n            <main>\n                <article>\n                    {renderTitle()}\n                    {renderInfo()}\n                    <div className=\"comments-header\">\n                        <div className=\"comment-counter-wrapper\">\n                            <span>Comments: {story.descendants ?? 0}</span>\n                        </div>\n                        <button\n                            className=\"button button-animated\"\n                            onClick={handleUpdateComments}\n                        >\n                            <span>\n                                <span>Refresh {seconds}</span>\n                            </span>\n                        </button>\n                    </div>\n                    <section className=\"comments-list\">\n                        {comments.length > 0 ? (\n                            renderComments()\n                        ) : (\n                            <h3 className=\"h3\">No comments</h3>\n                        )}\n                    </section>\n                </article>\n            </main>\n        )\n    );\n};\n\nexport default Story;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./Header.module.scss\";\nconst Header = () => {\n    return (\n        <header>\n            <h1>HACKER NEWS</h1>\n            <Link to=\"/\" className={styles.root}>\n                POSTS\n            </Link>\n        </header>\n    );\n};\n\nexport default Header;\n","import React from \"react\";\nimport styles from \"./Footer.module.scss\";\nconst Footer = () => {\n    return (\n        <footer>\n            <h3 className={styles.h3}>Hacker News</h3>\n            <div>\n                <a\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className={styles.link}\n                    href=\"https://github.com/homie43\"\n                >\n                    homie43 production\n                </a>\n            </div>\n        </footer>\n    );\n};\n\nexport default Footer;\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport * as actions from \"../actions/actions\";\nimport NewsList from \"./NewsList\";\nimport Story from \"./Story.jsx\";\nimport { getNewNews } from \"../services/news-api\";\nimport Header from \"./Header/Header\";\nimport Footer from \"./Footer/Footer\";\n\nconst mapStateToProps = (state) => {\n    return { stories: state.stories };\n};\n\nconst actionCreators = {\n    addLatestStories: actions.addLatestStories,\n    addStory: actions.addStory,\n    setBranchStatus: actions.setBranchStatus,\n};\n\nconst App = ({ addLatestStories, addStory, setBranchStatus }) => {\n    useEffect(() => {\n        const getStories = async () => {\n            const latestStoriesIDs = await getNewNews();\n            addLatestStories({ latestStoriesIDs: latestStoriesIDs.slice(0, 100) });\n            const data = JSON.parse(sessionStorage.getItem(\"branchesStatus\"));\n            const commentBranch = data ?? {};\n            setBranchStatus({ commentBranch });\n        };\n        getStories().then(() => {});\n    }, [addLatestStories, addStory, setBranchStatus]);\n\n    return (\n        <Router basename=\"/\">\n            <Header />\n            <Switch>\n                <Route path=\"/\" exact component={NewsList} />\n                <Route path=\"/:id\" component={Story} />\n            </Switch>\n            <Footer />\n        </Router>\n    );\n};\n\nexport default connect(mapStateToProps, actionCreators)(App);\n","import { handleActions } from \"redux-actions\";\nimport { combineReducers } from \"@reduxjs/toolkit\";\nimport * as actions from \"../actions/actions\";\n\nconst stories = handleActions(\n  {\n    [actions.addLatestStories](state, { payload: { latestStoriesIDs } }) {\n      return { latestStoriesIDs, stories: state.stories };\n    },\n    [actions.addStory]({ latestStoriesIDs }, { payload: { stories } }) {\n      return { latestStoriesIDs, stories };\n    },\n  },\n  { latestStoriesIDs: [], stories: [] }\n);\n\nconst ui = handleActions(\n  {\n    [actions.changeLoadingStatus](\n      { commentBranch },\n      { payload: { loadingStatus } }\n    ) {\n      return { commentBranch, loadingStatus };\n    },\n    [actions.changeBranchStatus](\n      { commentBranch, loadingStatus },\n      { payload: { id, status } }\n    ) {\n      return {\n        loadingStatus,\n        commentBranch: { ...commentBranch, [id]: status },\n      };\n    },\n    [actions.setBranchStatus](\n      { loadingStatus },\n      { payload: { commentBranch } }\n    ) {\n      return {\n        loadingStatus,\n        commentBranch,\n      };\n    },\n  },\n  { loadingStatus: \"loading\", commentBranch: {} }\n);\n\nexport default combineReducers({ stories, ui });\n","import { createStore } from \"@reduxjs/toolkit\";\nimport reducers from \"./reducers/reducers.js\";\n\nexport const store = createStore(reducers);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./style/sass/main.scss\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}